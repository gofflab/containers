Bootstrap: docker
From: ubuntu:18.04
IncludeCmd: yes

%labels
  Author Loyal A. Goff
  Maintainer Loyal A. Goff <loyalgoff@jhmi.edu>
  Name ATAC-Seq
  Version 0.0.1
  R_Version 4.0
  build_date 2021 Mar 19
  R_bioconductor True

%help
    Goff Lab scAnalysis container
    ===================
    Container version: 0.0.1
    OS Version: Ubuntu 18.04
    Apps:
        - bowtie2
        - python 3.6.9
        - R 4.0
	  * dplyr
	  * tidyr
	  * ggplot2
	  * BioMart

    Usage example:
        singularity exec ATAC-Seq.simg kallisto --version
      or
        ./ATAC-Seq.simg kallisto --version

%setup
  # for Maryland Advanced Research Computing Center

%apprun R
  exec R "$@"

%apprun Rscript
  exec Rscript "$@"

%runscript
  echo "Command executed from Singularity Container\n---\n"
  exec R "$@"

%test

%post
  echo "Hello from inside the container"
  apt-get -y update
  apt-get -y install wget nano
  apt-get install -y apt-transport-https apt-utils software-properties-common
  apt-get install -y add-apt-key
  export DEBIAN_FRONTEND=noninteractive
  ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
  apt-get install -y tzdata
  dpkg-reconfigure --frontend noninteractive tzdata

  # add CRAN/Ubuntu repo, add key, then refresh
  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
  add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/'
  apt-get update

  apt-get install -y libblas3 libblas-dev liblapack-dev liblapack3 curl
  apt-get install -y gcc fort77 aptitude
  aptitude install -y g++
  aptitude install -y xorg-dev
  aptitude install -y libreadline-dev
  aptitude install -y gfortran
  gfortran --version
  apt-get install -y libssl-dev libxml2-dev libpcre3-dev liblzma-dev libbz2-dev libcurl4-openssl-dev

  apt-get install -y r-base r-base-dev

  R --version

  # installing packages from cran
  R --slave -e 'install.packages("devtools",repos="https://cran.rstudio.com/")'
  R --slave -e 'install.packages("tidyverse",repos="https://cran.rstudio.com/")'
  R --slave -e 'install.packages("dplyr",repos="https://cran.rstudio.com/")'
  R --slave -e 'install.packages("tidyr",repos="https://cran.rstudio.com/")'
  R --slave -e 'install.packages("ggplot2",repos="https://cran.rstudio.com/")'

  # installing from bioc
  R --slave -e 'if (!requireNamespace("BiocManager",quietly=TRUE)) install.packages("BiocManager")'
  R --slave -e 'BiocManager::install(version = "3.12")'
  R --slave -e 'BiocManager::install("biomaRt",ask=FALSE)'
  R --slave -e 'BiocManager::install("BSgenome.Mmusculus.UCSC.mm10",ask=FALSE)'
  R --slave -e 'BiocManager::install("DropletUtils",ask=FALSE)'
  R --slave -e 'BiocManager::install("projectR", ask = FALSE)'


  # install kallisto
  KALLISTO_VERS="0.46.1"
  wget --no-check-certificate https://github.com/pachterlab/kallisto/releases/download/v${KALLISTO_VERS}/kallisto_linux-v${KALLISTO_VERS}.tar.gz
  tar -zxvf kallisto_linux-v${KALLISTO_VERS}.tar.gz
  mv kallisto/kallisto /usr/local/bin/
  rm kallisto_linux-v${KALLISTO_VERS}.tar.gz
  rm -Rf kallisto


  # Setup container file system
  ## default mount paths (MARCC)
  mkdir /scratch /data /work-zfs

  ## Custom scripts/workflows go here
  mkdir /scripts

  ## More project skeleton stuff
  #mkdir -p /opt/reference
  #mkdir -p /opt/data

  # Install velocyto.R
  apt-get install -y libboost-dev \
  libbamtools-dev \
  libboost-dev \
  libboost-iostreams-dev \
  libboost-log-dev \
  libboost-system-dev \
  libboost-test-dev \
  libz-dev

  R --slave -e 'BiocManager::install(c("pcaMethods"),suppressAutoUpdate=TRUE,ask=FALSE,suppressUpdates=TRUE)'
  R --slave -e 'BiocManager::install(c("Biostrings", "GenomicAlignments", "Rsamtools", "edgeR"),suppressAutoUpdate=TRUE,ask=FALSE,suppressUpdates=TRUE)'

%environment
  R_VERSION="4.0"
  BOWTIE2_VERS=""
  export R_VERSION
  R_CONFIG_DIR=/etc/R/
  export R_CONFIG_DIR
  export LC_ALL=C
  export PATH=$PATH
