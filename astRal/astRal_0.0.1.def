Bootstrap: docker
From: ubuntu:18.04
IncludeCmd: yes

%labels
  Author Loyal A. Goff
  Maintainer Loyal A. Goff <loyalgoff@jhmi.edu>
  Name astRal
  Version 0.0.1
  R_Version 4.0.
  build_date 2020 Nov 30
  R_bioconductor True

%help
    Goff Lab astRal dev container
    ===================
    Container version: 0.0.1
    OS Version: Ubuntu 18.04
    Apps:
        - R 4.0
          * sf
          * astRal

    Usage example:
        singularity exec astRal.simg R
      or
        ./astRal.simg R

%setup
  # for Maryland Advanced Research Computing Center

%apprun R
  exec R "$@"

%apprun Rscript
  exec Rscript "$@"

%runscript
  echo "Command executed from Singularity Container\n---\n"
  exec R "$@"

%test

%post
  echo "Hello from inside the container"
  apt-get -y update
  apt-get -y install wget nano
  apt-get install -y apt-transport-https apt-utils software-properties-common
  apt-get install -y add-apt-key
  export DEBIAN_FRONTEND=noninteractive
  ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
  apt-get install -y tzdata
  dpkg-reconfigure --frontend noninteractive tzdata

  # add CRAN/Ubuntu repo, add key, then refresh
  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
  #add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/'
  add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/'
  apt-get update

  apt-get install -y libblas3 libblas-dev liblapack-dev liblapack3 curl
  apt-get install -y gcc fort77 aptitude
  aptitude install -y g++
  aptitude install -y xorg-dev
  aptitude install -y libreadline-dev
  aptitude install -y gfortran
  gfortran --version
  apt-get install -y libssl-dev libxml2-dev libpcre3-dev liblzma-dev libbz2-dev libcurl4-openssl-dev
  apt-get install -y libhdf5-dev hdf5-helpers libmariadb-client-lgpl-dev
  apt-get install -y libudunits2-dev libgdal-dev libgeos-dev libproj-dev

  apt install -y r-base 

  R --version

  # # installing packages from cran
  # R --slave -e 'install.packages("devtools",repos="https://cran.rstudio.com/")'
  # R --slave -e 'install.packages("dplyr",repos="https://cran.rstudio.com/")'
  # R --slave -e 'install.packages("rhdf5",repos="https://cran.rstudio.com/")'
  #
  # # installing from bioc
  # R --slave -e 'if (!requireNamespace("BiocManager",quietly=TRUE)) install.packages("BiocManager")'
  # R --slave -e 'BiocManager::install(version = "3.10")'
  # R --slave -e 'BiocManager::install("biomaRt",ask=FALSE)'
  #
  # # install monocle3
  # R --slave -e 'BiocManager::install(c("BiocGenerics", "DelayedArray", "DelayedMatrixStats",
  #                      "limma", "S4Vectors", "SingleCellExperiment",
  #                      "SummarizedExperiment", "batchelor", "Matrix.utils"))'
  # R --slave -e 'devtools::install_github("cole-trapnell-lab/leidenbase")'
  # R --slave -e 'devtools::install_github("cole-trapnell-lab/monocle3")'

  # Setup container file system
  ## default mount paths (MARCC)
  mkdir /scratch /data /work-zfs

  ## Custom scripts/workflows go here
  mkdir /scripts

  ## More project skeleton stuff
  #mkdir -p /opt/reference
  #mkdir -p /opt/data

%environment
  #R_VERSION=4.0.0
  export R_VERSION
  R_CONFIG_DIR=/etc/R/
  export R_CONFIG_DIR
  export LC_ALL=C
  export PATH=$PATH
